version: '3.5'
services:
  web:
    image: nginx:stable
    depends_on:
      - backend
      - keycloak
    volumes:
      - ./provisioning/nginx/nginx-dev.conf:/etc/nginx/nginx.conf
    ports:
      - '80:80'

  backend:
    image: node:10
    working_dir: /usr/src/app
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - redis
      - postgres
      - ldap
    environment:
      NODE_ENV: development
      DEBUG: app:*

      APPLICATION_NAME: Customer Center
      APPLICATION_HOST: loclhost

      IDP_HOST: http://keycloak:8080
      IDP_TOKEN_PATH: /auth/realms/master/protocol/openid-connect/token
      IDP_CLIENT_ID: timed-confidential
      IDP_CLIENT_SECRET: 802635ae-2395-4419-b15b-b09dc838db14

      TIMED_HOST: http://timedbackend
      TIMED_PREFIX: /api/v1

      POSTGRES_HOST: postgres
      POSTGRES_USERNAME: test
      POSTGRES_PASSWORD: test
      POSTGRES_DATABASE: customercenter

      REDIS_HOST: redis
      REDIS_PORT: 6379

      SMTP_PORT: 1025
      SMTP_HOST: mailhog
      SMTP_SECURE: 'false'
      SMTP_REQUIRE_TLS: 'false'
      SMTP_FROM: from@example.com
      SMTP_TO: to@example.com

      AUTH_SECRET: ponies
      AUTH_ROLE_ADMIN: admin
      AUTH_ROLE_EMPLOYEE: employees
      AUTH_EXPIRE_PASSWORD: 3600
      AUTH_USERS_SEARCH_BASE: cn=users,dc=adsy-ext,dc=becs,dc=adfinis-sygroup,dc=ch
      AUTH_USERS_SEARCH_FILTER: uid={{username}}
      AUTH_USERS_GROUPSEARCH_BASE: cn=groups,dc=adsy-ext,dc=becs,dc=adfinis-sygroup,dc=ch
      AUTH_USERS_GROUPSEARCH_FILTER: (|(uniqueMember={{dn}})(memberUid={{dn}}))
      AUTH_CUSTOMERS_SEARCH_BASE: ou=customers,dc=adsy-ext,dc=becs,dc=adfinis-sygroup,dc=ch
      AUTH_CUSTOMERS_SEARCH_FILTER: uid={{username}}
      AUTH_CUSTOMERS_GROUPSEARCH_BASE: ou=customers,dc=adsy-ext,dc=becs,dc=adfinis-sygroup,dc=ch
      AUTH_CUSTOMERS_GROUPSEARCH_FILTER: (|(uniqueMember={{dn}})(memberUid={{dn}}))

      LDAP_HOST: ldap://ldap:389
      LDAP_BIND_DN: cn=admin,dc=adsy-ext,dc=becs,dc=adfinis-sygroup,dc=ch
      LDAP_BIND_CREDENTIALS: 123qwe

    command: yarn watch
    ports:
      - '3000:3000'
      # Chrome Inspector Protocol (Node.js debugging)
      # https://nodejs.org/en/docs/inspector
      - '9229:9229'

  frontend:
    image: danlynn/ember-cli:3.1.4-node_10.1
    volumes:
      - ./frontend:/myapp
    tmpfs:
      - /myapp/tmp
    depends_on:
      - backend
    command: ember server --proxy http://backend:3000
    ports:
      - '4200:4200'
      - '7020:7020'
      - '7357:7357'

  redis:
    image: redis:6
    ports:
      - '6379:6379'

  ldap:
    image: osixia/openldap:1.4.0
    volumes:
      - ./provisioning/ldap/ldap.ldif:/container/service/slapd/assets/config/bootstrap/ldif/custom
    environment:
      - LDAP_ORGANISATION=adsy
      - LDAP_DOMAIN=adsy-ext.becs.adfinis-sygroup.ch
      - LDAP_ADMIN_PASSWORD=123qwe
      - LDAP_OPENLDAP_UID=1000
      - LDAP_OPENLDAP_GID=1000
      - LDAP_TLS=false
      - LDAP_BASE_DN=dc=adsy-ext,dc=becs,dc=adfinis-sygroup,dc=ch
    command: ["--copy-service", "--loglevel", "debug"]
    ports:
      - '4389:389'

  ldapadmin:
    image: osixia/phpldapadmin
    volumes:
        - ./provisioning/ldapadmin/config.php:/container/service/phpldapadmin/assets/config/config.php
    environment:
      #- PHPLDAPADMIN_LDAP_HOSTS=ldap
      - PHPLDAPADMIN_HTTPS=false
      - PHPLDAPADMIN_LDAP_CLIENT_TLS=false
    command: ['--copy-service']
    ports:
      - '6443:80'

  postgres:
    image: postgres:12
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./provisioning/postgres/setup/:/docker-entrypoint-initdb.d/
      - ./provisioning/postgres/timed-test-data.sql:/tmp/timed-test-data.sql
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=customercenter
    ports:
      - '5432:5432'

  pgadmin:
    image: fenglc/pgadmin4
    depends_on:
      - postgres
    environment:
      - DEFAULT_USER=admin
      - DEFAULT_PASSWORD=admin
    ports:
      - '5050:5050'

  timedbackend:
    image: adfinissygroup/timed-backend:v1.1.0
    depends_on:
      - postgres
    environment:
      - DJANGO_OIDC_CREATE_USER=True
      - DJANGO_OIDC_CHECK_INTROSPECT=True
      - DJANGO_OIDC_CLIENT_ID=timed-confidential
      - DJANGO_OIDC_CLIENT_SECRET=802635ae-2395-4419-b15b-b09dc838db14
      - DJANGO_OIDC_DEFAULT_BASE_URL=http://keycloak:8080/auth/realms/master/protocol/openid-connect
      - DJANGO_DATABASE_HOST=postgres
      - DJANGO_DATABASE_USER=test
      - DJANGO_DATABASE_PASSWORD=test
      - DJANGO_DATABASE_NAME=timed
      - ENV=docker
      - STATIC_ROOT=/var/www/static
    command: /bin/sh -c "wait-for-it.sh -t 60 postgres:5432 -- ./manage.py migrate && uwsgi"
    ports:
      - '8000:80'

  keycloak:
    image: jboss/keycloak:10.0.2
    depends_on:
      - postgres
    volumes:
      - ./provisioning/keycloak/:/etc/keycloak/
    environment:
      - DB_VENDOR=postgres
      - DB_ADDR=postgres
      - DB_USER=test
      - DB_PASSWORD=test
      - DB_DATABASE=customercenter
      - IDP_USER=admin
      - IDP_PASSWORD=admin
      - PROXY_ADDRESS_FORWARDING=true
    ports:
      - "8080:8080"
    # http://www.keycloak.org/docs/3.3/server_admin/topics/export-import.html
    command:
      [
        "-Dkeycloak.migration.action=import",
        "-Dkeycloak.migration.provider=singleFile",
        "-Dkeycloak.migration.file=/etc/keycloak/config.json",
        "-b",
        "0.0.0.0",
      ]

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - '8025:8025'

volumes:
  postgres:
    name: customercenter-postgres
    driver: local

networks:
  default:
    name: customercenter
    driver: bridge
